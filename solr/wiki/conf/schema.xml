<?xml version="1.0" encoding="UTF-8" ?>

<schema name="demo" version="1.5">
 <fields>
<field name="id"        type="string"  indexed="true" stored="true" required="true"/>
<field name="title"     type="string"  indexed="true" stored="false"/>
<field name="revision"  type="int"    indexed="true" stored="true"/>
<field name="user"      type="string"  indexed="true" stored="true"/>
<field name="userId"    type="int"     indexed="true" stored="true"/>
<field name="text"      type="text_en"    indexed="true" stored="false"/>
<field name="timestamp" type="date"    indexed="true" stored="true"/>
<field name="titleText" type="text_en"    indexed="true" stored="true"/>

<field name="text_f"    type="text_en"    indexed="true" stored="true" multiValued="true"/>

 </fields>
<uniqueKey>id</uniqueKey>
<copyField source="title" dest="titleText"/>  
<copyField source="title" dest="text_f"/>  
<copyField source="user" dest="text_f"/>  
<copyField source="userId" dest="text_f"/>  
<copyField source="text" dest="text_f"/>  
<copyField source="timestamp" dest="text_f"/> 
  <types>
    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in a
       standard package such as org.apache.solr.analysis
    -->

    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
  
    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>    
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
   

    <!-- A general text field that has reasonable, generic
         cross-language defaults: it tokenizes with StandardTokenizer,
	 removes stop words from case-insensitive "stopwords.txt"
	 (empty by default), and down cases.  At query time only, it
	 also applies synonyms. -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
	  <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
		<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
		<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		<filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="15" side="front"/>	
		<!--<filter class="solr.ShingleFilterFactory" maxShingleSize="2" outputUnigrams="true"/>-->
		<!--<filter class="solr.PatternCaptureGroupFilterFactory" pattern="(https?://([a-zA-Z\-_0-9.]+))" preserve_original="false"/>-->
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
	  <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-FoldToASCII.txt"/>
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
		<filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
		<filter class="solr.EdgeNGramFilterFactory" minGramSize="2" maxGramSize="15" side="front"/>	
		<filter class="solr.ShingleFilterFactory" maxShingleSize="2" outputUnigrams="true"/>
		<!--<filter class="solr.PatternCaptureGroupFilterFactory" pattern="(https?://([a-zA-Z\-_0-9.]+))" preserve_original="false"/>-->
      </analyzer>
    </fieldType>



   </types>
 

</schema>

<!--<?xml version="1.0" encoding="UTF-8" ?>

<schema name="wikipedia1" version="1.1">


  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">

	<analyzer type="index">
                                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
                                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" 				catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
                                <filter class="solr.LowerCaseFilterFactory"/>
                                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                                <filter class="solr.PorterStemFilterFactory"/>
                                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                        </analyzer>
                        <analyzer type="query">
                                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                                <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
                                <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
                                <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" 				catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
                                <filter class="solr.LowerCaseFilterFactory"/>
                                <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
                                <filter class="solr.PorterStemFilterFactory"/>
                                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
                        </analyzer>

    </fieldType>
 </types>

<fields>
   <field name="id" type="string" indexed="true" stored="true"
required="true"/>
   <field name="title" type="text" indexed="true" stored="true"
termVectors="true"/>
   <field name="text" type="text" indexed="true" stored="true"
termVectors="true"/>
   <field name="_version_" type="long" indexed="true" stored="true"
multiValued="false"/>
 </fields>
 
 <uniqueKey>id</uniqueKey>
 <defaultSearchField>text</defaultSearchField>


 <solrQueryParser defaultOperator="OR"/>

 

</schema>
-->

